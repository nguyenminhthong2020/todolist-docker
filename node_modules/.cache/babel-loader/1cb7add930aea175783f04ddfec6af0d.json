{"ast":null,"code":"export default function reducer(state, action) {\n  switch (action.type) {\n    case 'init':\n      return {\n        query: action.payload.query,\n        items: action.payload.items\n      };\n\n    case 'add_item':\n      return { ...state,\n        items: [...state.items, action.payload]\n      };\n\n    case 'update_query':\n      return { ...state,\n        query: action.payload.query\n      };\n\n    case 'finish_task':\n      return { ...state,\n        items: state.items.map(item => item.id === action.payload.id ? { ...item,\n          complete: true\n        } : item)\n      };\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["D:/git/nmthong9021/todolist-react-functioncomponent/src/todoAppReducer.js"],"names":["reducer","state","action","type","query","payload","items","map","item","id","complete"],"mappings":"AAAA,eAAe,SAASA,OAAT,CAAiBC,KAAjB,EAAwBC,MAAxB,EAAgC;AAC7C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,MAAL;AACE,aAAO;AACLC,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KADjB;AAELE,QAAAA,KAAK,EAAEJ,MAAM,CAACG,OAAP,CAAeC;AAFjB,OAAP;;AAKF,SAAK,UAAL;AACE,aAAO,EACL,GAAGL,KADE;AAELK,QAAAA,KAAK,EAAE,CAAC,GAAGL,KAAK,CAACK,KAAV,EAAiBJ,MAAM,CAACG,OAAxB;AAFF,OAAP;;AAKF,SAAK,cAAL;AACE,aAAO,EACL,GAAGJ,KADE;AAELG,QAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD;AAFjB,OAAP;;AAKF,SAAK,aAAL;AACE,aAAO,EACL,GAAGH,KADE;AAELK,QAAAA,KAAK,EAAEL,KAAK,CAACK,KAAN,CAAYC,GAAZ,CAAgBC,IAAI,IAAIA,IAAI,CAACC,EAAL,KAAYP,MAAM,CAACG,OAAP,CAAeI,EAA3B,GAAgC,EAAE,GAAGD,IAAL;AAAWE,UAAAA,QAAQ,EAAE;AAArB,SAAhC,GAA8DF,IAAtF;AAFF,OAAP;;AAKF;AACE,aAAOP,KAAP;AA1BJ;AA4BD","sourcesContent":["export default function reducer(state, action) {\n  switch (action.type) {\n    case 'init':\n      return {\n        query: action.payload.query,\n        items: action.payload.items\n      }\n\n    case 'add_item':\n      return {\n        ...state,\n        items: [...state.items, action.payload]\n      }\n\n    case 'update_query':\n      return {\n        ...state,\n        query: action.payload.query\n      }\n\n    case 'finish_task':\n      return {\n        ...state,\n        items: state.items.map(item => item.id === action.payload.id ? { ...item, complete: true } : item)\n      }\n\n    default:\n      return state;\n  }\n}"]},"metadata":{},"sourceType":"module"}